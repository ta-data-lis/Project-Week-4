{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Cleaning"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "1. Load Datas\n",
    "2. Basic Cleaning\n",
    "    2.1 Column per column\n",
    "        2.1.1 columns to float\n",
    "        2.1.2 columns with datetime\n",
    "        2.1.2 columns with Boolean\n",
    "        2.1.2 Rest\n",
    "3. Cleaning on micro level\n",
    "4. Change column names and save to csv"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 1. Load Datas"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1089,
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "import math\n",
    "import time\n",
    "import csv\n",
    "import requests\n",
    "import re\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1090,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Objektart', 'MietpreisproMonat', 'MietpreisproMonat(exkl.NK)',\n",
       "       'Nebenkosten', 'Wohnfläche', 'Zimmer', 'Geschoss', 'Verfügbarab',\n",
       "       'Balkon(e)', 'Lift', 'AltesGebäude', 'ÖV-Haltestelle',\n",
       "       'Einkaufsmöglichkeit', 'rating', 'adress', 'publication_date', 'city',\n",
       "       'DateofScrapping', 'Nutzfläche', 'Baujahr', 'Aussenparkplatz',\n",
       "       'Haustiereerlaubt', 'Kabel-TV', 'Kinderfreundlich', 'Kindergarten',\n",
       "       'Primarschule', 'Sekundarschule', 'Autobahn', 'Einstellplatz',\n",
       "       'Rollstuhlgängig', 'Minergie-zertifiziert', 'Cheminée', 'Kubatur',\n",
       "       'Hochparterre', 'Neubau', 'Wohnungen', 'Wasseranschluss', 'Toiletten',\n",
       "       'Mittelhaus', 'Möbliert', 'JährlicherMietpreisprom²',\n",
       "       'JährlicherMietpreisprom²(exkl.NK)', 'Raumhöhe', 'Bäder', 'Still',\n",
       "       'Sonnig', 'Erstbezug', 'Geschirrspülmaschine', 'Eckhaus', 'Veranda',\n",
       "       'Hebebühne', 'Anfahrrampe', 'Holzofen', 'Grundstückfläche', 'Estrich',\n",
       "       'Swimmingpool'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 1090,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ds1 = pd.read_csv(\"./Data/flats_Bern.csv\", index_col=0)\n",
    "ds2 = pd.read_csv(\"./Data/flats_zuerich.csv\", index_col=0)\n",
    "ds3 = pd.read_csv(\"./Data/flats_luzern.csv\", index_col=0)\n",
    "\n",
    "ds=pd.concat([ds1, ds2, ds3], sort=False)\n",
    "ds\n",
    "ds.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1091,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>MietpreisproMonat(exkl.NK)</th>\n",
       "      <th>Nebenkosten</th>\n",
       "      <th>Wohnfläche</th>\n",
       "      <th>Zimmer</th>\n",
       "      <th>Balkon(e)</th>\n",
       "      <th>Lift</th>\n",
       "      <th>AltesGebäude</th>\n",
       "      <th>rating</th>\n",
       "      <th>Nutzfläche</th>\n",
       "      <th>Baujahr</th>\n",
       "      <th>...</th>\n",
       "      <th>Erstbezug</th>\n",
       "      <th>Geschirrspülmaschine</th>\n",
       "      <th>Eckhaus</th>\n",
       "      <th>Veranda</th>\n",
       "      <th>Hebebühne</th>\n",
       "      <th>Anfahrrampe</th>\n",
       "      <th>Holzofen</th>\n",
       "      <th>Grundstückfläche</th>\n",
       "      <th>Estrich</th>\n",
       "      <th>Swimmingpool</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>count</td>\n",
       "      <td>1729.000000</td>\n",
       "      <td>1730.000000</td>\n",
       "      <td>1753.000000</td>\n",
       "      <td>2319.000000</td>\n",
       "      <td>1199.0</td>\n",
       "      <td>901.0</td>\n",
       "      <td>134.0</td>\n",
       "      <td>676.000000</td>\n",
       "      <td>137.000000</td>\n",
       "      <td>851.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.00000</td>\n",
       "      <td>2.0</td>\n",
       "      <td>2.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>mean</td>\n",
       "      <td>1964.921342</td>\n",
       "      <td>229.653179</td>\n",
       "      <td>79.173987</td>\n",
       "      <td>2.940060</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4.094675</td>\n",
       "      <td>131.058394</td>\n",
       "      <td>1969.900118</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3953.00000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>std</td>\n",
       "      <td>978.061306</td>\n",
       "      <td>97.158698</td>\n",
       "      <td>38.826963</td>\n",
       "      <td>1.250568</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.967579</td>\n",
       "      <td>474.153484</td>\n",
       "      <td>62.213754</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5494.21969</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>min</td>\n",
       "      <td>70.000000</td>\n",
       "      <td>13.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>1375.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>68.00000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>25%</td>\n",
       "      <td>1327.000000</td>\n",
       "      <td>170.000000</td>\n",
       "      <td>56.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>60.000000</td>\n",
       "      <td>1954.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2010.50000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>50%</td>\n",
       "      <td>1680.000000</td>\n",
       "      <td>220.000000</td>\n",
       "      <td>75.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>83.000000</td>\n",
       "      <td>1976.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3953.00000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>75%</td>\n",
       "      <td>2350.000000</td>\n",
       "      <td>280.000000</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>3.500000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>112.000000</td>\n",
       "      <td>2012.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>5895.50000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>max</td>\n",
       "      <td>8900.000000</td>\n",
       "      <td>1050.000000</td>\n",
       "      <td>320.000000</td>\n",
       "      <td>12.500000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>5613.000000</td>\n",
       "      <td>2020.000000</td>\n",
       "      <td>...</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>7838.00000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>8 rows × 40 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       MietpreisproMonat(exkl.NK)  Nebenkosten   Wohnfläche       Zimmer  \\\n",
       "count                 1729.000000  1730.000000  1753.000000  2319.000000   \n",
       "mean                  1964.921342   229.653179    79.173987     2.940060   \n",
       "std                    978.061306    97.158698    38.826963     1.250568   \n",
       "min                     70.000000    13.000000     1.000000     1.000000   \n",
       "25%                   1327.000000   170.000000    56.000000     2.000000   \n",
       "50%                   1680.000000   220.000000    75.000000     3.000000   \n",
       "75%                   2350.000000   280.000000   100.000000     3.500000   \n",
       "max                   8900.000000  1050.000000   320.000000    12.500000   \n",
       "\n",
       "       Balkon(e)   Lift  AltesGebäude      rating   Nutzfläche      Baujahr  \\\n",
       "count     1199.0  901.0         134.0  676.000000   137.000000   851.000000   \n",
       "mean         1.0    1.0           1.0    4.094675   131.058394  1969.900118   \n",
       "std          0.0    0.0           0.0    0.967579   474.153484    62.213754   \n",
       "min          1.0    1.0           1.0    2.000000    10.000000  1375.000000   \n",
       "25%          1.0    1.0           1.0    3.000000    60.000000  1954.000000   \n",
       "50%          1.0    1.0           1.0    4.000000    83.000000  1976.000000   \n",
       "75%          1.0    1.0           1.0    5.000000   112.000000  2012.000000   \n",
       "max          1.0    1.0           1.0    6.000000  5613.000000  2020.000000   \n",
       "\n",
       "       ...  Erstbezug  Geschirrspülmaschine  Eckhaus  Veranda  Hebebühne  \\\n",
       "count  ...        1.0                   4.0      7.0      1.0        1.0   \n",
       "mean   ...        1.0                   1.0      1.0      1.0        1.0   \n",
       "std    ...        NaN                   0.0      0.0      NaN        NaN   \n",
       "min    ...        1.0                   1.0      1.0      1.0        1.0   \n",
       "25%    ...        1.0                   1.0      1.0      1.0        1.0   \n",
       "50%    ...        1.0                   1.0      1.0      1.0        1.0   \n",
       "75%    ...        1.0                   1.0      1.0      1.0        1.0   \n",
       "max    ...        1.0                   1.0      1.0      1.0        1.0   \n",
       "\n",
       "       Anfahrrampe  Holzofen  Grundstückfläche  Estrich  Swimmingpool  \n",
       "count          1.0       1.0           2.00000      2.0           2.0  \n",
       "mean           1.0       1.0        3953.00000      1.0           1.0  \n",
       "std            NaN       NaN        5494.21969      0.0           0.0  \n",
       "min            1.0       1.0          68.00000      1.0           1.0  \n",
       "25%            1.0       1.0        2010.50000      1.0           1.0  \n",
       "50%            1.0       1.0        3953.00000      1.0           1.0  \n",
       "75%            1.0       1.0        5895.50000      1.0           1.0  \n",
       "max            1.0       1.0        7838.00000      1.0           1.0  \n",
       "\n",
       "[8 rows x 40 columns]"
      ]
     },
     "execution_count": 1091,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ds.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1092,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2368"
      ]
     },
     "execution_count": 1092,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ds.shape[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1093,
   "metadata": {},
   "outputs": [],
   "source": [
    "ds = ds.drop_duplicates()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1094,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2356"
      ]
     },
     "execution_count": 1094,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ds.shape[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 2. Basic Cleaning"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1095,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Objektart                            2356\n",
       "MietpreisproMonat                    2355\n",
       "MietpreisproMonat(exkl.NK)           1717\n",
       "Nebenkosten                          1718\n",
       "Wohnfläche                           1744\n",
       "Zimmer                               2307\n",
       "Geschoss                             1796\n",
       "Verfügbarab                          2136\n",
       "Balkon(e)                            1191\n",
       "Lift                                  896\n",
       "AltesGebäude                          133\n",
       "ÖV-Haltestelle                        995\n",
       "Einkaufsmöglichkeit                   982\n",
       "rating                                673\n",
       "adress                               2356\n",
       "publication_date                     1997\n",
       "city                                 2356\n",
       "DateofScrapping                      2356\n",
       "Nutzfläche                            133\n",
       "Baujahr                               847\n",
       "Aussenparkplatz                       364\n",
       "Haustiereerlaubt                      443\n",
       "Kabel-TV                              921\n",
       "Kinderfreundlich                      366\n",
       "Kindergarten                          593\n",
       "Primarschule                          606\n",
       "Sekundarschule                        392\n",
       "Autobahn                              417\n",
       "Einstellplatz                         462\n",
       "Rollstuhlgängig                       109\n",
       "Minergie-zertifiziert                  50\n",
       "Cheminée                              120\n",
       "Kubatur                                17\n",
       "Hochparterre                           27\n",
       "Neubau                                103\n",
       "Wohnungen                              20\n",
       "Wasseranschluss                         6\n",
       "Toiletten                              21\n",
       "Mittelhaus                              3\n",
       "Möbliert                                2\n",
       "JährlicherMietpreisprom²                1\n",
       "JährlicherMietpreisprom²(exkl.NK)       1\n",
       "Raumhöhe                                6\n",
       "Bäder                                  12\n",
       "Still                                   4\n",
       "Sonnig                                  4\n",
       "Erstbezug                               1\n",
       "Geschirrspülmaschine                    4\n",
       "Eckhaus                                 7\n",
       "Veranda                                 1\n",
       "Hebebühne                               1\n",
       "Anfahrrampe                             1\n",
       "Holzofen                                1\n",
       "Grundstückfläche                        2\n",
       "Estrich                                 2\n",
       "Swimmingpool                            2\n",
       "dtype: int64"
      ]
     },
     "execution_count": 1095,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "## drop columns with only a few count\n",
    "ds.count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1096,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "56"
      ]
     },
     "execution_count": 1096,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(ds.columns)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1097,
   "metadata": {},
   "outputs": [],
   "source": [
    "minCount=0.1*ds.shape[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1098,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Objektart                     2356\n",
       "MietpreisproMonat             2355\n",
       "MietpreisproMonat(exkl.NK)    1717\n",
       "Nebenkosten                   1718\n",
       "Wohnfläche                    1744\n",
       "Zimmer                        2307\n",
       "Geschoss                      1796\n",
       "Verfügbarab                   2136\n",
       "Balkon(e)                     1191\n",
       "Lift                           896\n",
       "ÖV-Haltestelle                 995\n",
       "Einkaufsmöglichkeit            982\n",
       "rating                         673\n",
       "adress                        2356\n",
       "publication_date              1997\n",
       "city                          2356\n",
       "DateofScrapping               2356\n",
       "Baujahr                        847\n",
       "Aussenparkplatz                364\n",
       "Haustiereerlaubt               443\n",
       "Kabel-TV                       921\n",
       "Kinderfreundlich               366\n",
       "Kindergarten                   593\n",
       "Primarschule                   606\n",
       "Sekundarschule                 392\n",
       "Autobahn                       417\n",
       "Einstellplatz                  462\n",
       "dtype: int64"
      ]
     },
     "execution_count": 1098,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "for x in ds.columns:\n",
    "    if ds[x].count() < minCount:\n",
    "        ds= ds.drop([x], axis=1)\n",
    "        \n",
    "len(ds.columns)\n",
    "\n",
    "ds.count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1099,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Objektart', 'MietpreisproMonat', 'MietpreisproMonat(exkl.NK)',\n",
       "       'Nebenkosten', 'Wohnfläche', 'Zimmer', 'Geschoss', 'Verfügbarab',\n",
       "       'Balkon(e)', 'Lift', 'ÖV-Haltestelle', 'Einkaufsmöglichkeit', 'rating',\n",
       "       'adress', 'publication_date', 'city', 'DateofScrapping', 'Baujahr',\n",
       "       'Aussenparkplatz', 'Haustiereerlaubt', 'Kabel-TV', 'Kinderfreundlich',\n",
       "       'Kindergarten', 'Primarschule', 'Sekundarschule', 'Autobahn',\n",
       "       'Einstellplatz'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 1099,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ds.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 2.1 Column per column"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 2.1.1 columns to float"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### a) prices\n",
    "MietpreisproMonat, \n",
    "MietpreisproMonat(exkl.NK), \n",
    "Nebenkosten"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1100,
   "metadata": {},
   "outputs": [],
   "source": [
    "col = ['MietpreisproMonat', \n",
    "'MietpreisproMonat(exkl.NK)', \n",
    "'Nebenkosten']\n",
    "\n",
    "\n",
    "## drop Mietpreise = nan und Mietpreise \"aufAnfrage\"\n",
    "ds.MietpreisproMonat[(ds['MietpreisproMonat'] != 'aufAnfrage')].count()\n",
    "ds = ds[ds['MietpreisproMonat'] != 'aufAnfrage']\n",
    "\n",
    "\n",
    "ds['MietpreisproMonat'] = ds['MietpreisproMonat'].astype('float')\n",
    "ds['MietpreisproMonat(exkl.NK)'] = ds['MietpreisproMonat(exkl.NK)'].astype('float', errors='ignore')\n",
    "ds['Nebenkosten'] = ds['Nebenkosten'].astype('float', errors='ignore')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1101,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([127., 810., 581., 147.,  38.,   6.,   1.,   5.,   1.,   2.]),\n",
       " array([  13. ,  116.7,  220.4,  324.1,  427.8,  531.5,  635.2,  738.9,\n",
       "         842.6,  946.3, 1050. ]),\n",
       " <a list of 10 Patch objects>)"
      ]
     },
     "execution_count": 1101,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist(ds[col[0]].dropna())\n",
    "plt.hist(ds[col[1]].dropna())\n",
    "plt.hist(ds[col[2]].dropna())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### b) size of flat\n",
    "\n",
    "Wohnfläche,Zimmer"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1102,
   "metadata": {},
   "outputs": [],
   "source": [
    "ds['Wohnfläche'].unique()\n",
    "ds['Wohnfläche'] = ds['Wohnfläche'].astype('float', errors = 'ignore')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1103,
   "metadata": {},
   "outputs": [],
   "source": [
    "ds['Zimmer'] = ds['Zimmer'].astype('float')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### c) dicstances\n",
    "Kindergarten\n",
    "Primarschule\n",
    "Sekundarschule"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1104,
   "metadata": {},
   "outputs": [],
   "source": [
    "col = ['Kindergarten', 'Primarschule', 'Sekundarschule','ÖV-Haltestelle', 'Einkaufsmöglichkeit', 'Autobahn']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1105,
   "metadata": {},
   "outputs": [],
   "source": [
    "for x in col: \n",
    "    ds[x]= ds[x].apply(lambda y: float(str(y).replace(\"m\",\"\")))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1106,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Objektart</th>\n",
       "      <th>MietpreisproMonat</th>\n",
       "      <th>MietpreisproMonat(exkl.NK)</th>\n",
       "      <th>Nebenkosten</th>\n",
       "      <th>Wohnfläche</th>\n",
       "      <th>Zimmer</th>\n",
       "      <th>Geschoss</th>\n",
       "      <th>Verfügbarab</th>\n",
       "      <th>Balkon(e)</th>\n",
       "      <th>Lift</th>\n",
       "      <th>...</th>\n",
       "      <th>Baujahr</th>\n",
       "      <th>Aussenparkplatz</th>\n",
       "      <th>Haustiereerlaubt</th>\n",
       "      <th>Kabel-TV</th>\n",
       "      <th>Kinderfreundlich</th>\n",
       "      <th>Kindergarten</th>\n",
       "      <th>Primarschule</th>\n",
       "      <th>Sekundarschule</th>\n",
       "      <th>Autobahn</th>\n",
       "      <th>Einstellplatz</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>23016581</td>\n",
       "      <td>Wohnung</td>\n",
       "      <td>1480.0</td>\n",
       "      <td>1240.0</td>\n",
       "      <td>240.0</td>\n",
       "      <td>68.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>2.Stock</td>\n",
       "      <td>01.05.2020</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>23016600</td>\n",
       "      <td>Wohnung</td>\n",
       "      <td>3500.0</td>\n",
       "      <td>3200.0</td>\n",
       "      <td>300.0</td>\n",
       "      <td>140.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>2.Stock</td>\n",
       "      <td>01.05.2020</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>23014342</td>\n",
       "      <td>Wohnung</td>\n",
       "      <td>1710.0</td>\n",
       "      <td>1470.0</td>\n",
       "      <td>240.0</td>\n",
       "      <td>73.0</td>\n",
       "      <td>3.5</td>\n",
       "      <td>NaN</td>\n",
       "      <td>01.03.2020</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1965.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>700.0</td>\n",
       "      <td>700.0</td>\n",
       "      <td>700.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>23017350</td>\n",
       "      <td>Wohnung</td>\n",
       "      <td>1180.0</td>\n",
       "      <td>1030.0</td>\n",
       "      <td>150.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.Stock</td>\n",
       "      <td>01.05.2020</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>350.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1000.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>23016559</td>\n",
       "      <td>Wohnung</td>\n",
       "      <td>1360.0</td>\n",
       "      <td>1230.0</td>\n",
       "      <td>130.0</td>\n",
       "      <td>44.0</td>\n",
       "      <td>2.5</td>\n",
       "      <td>3.Stock</td>\n",
       "      <td>01.06.2020</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>1600.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>21825642</td>\n",
       "      <td>Wohnung</td>\n",
       "      <td>1430.0</td>\n",
       "      <td>1290.0</td>\n",
       "      <td>140.0</td>\n",
       "      <td>35.0</td>\n",
       "      <td>2.5</td>\n",
       "      <td>NaN</td>\n",
       "      <td>nachVereinbarung</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>400.0</td>\n",
       "      <td>610.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>20657528</td>\n",
       "      <td>Wohnung</td>\n",
       "      <td>1840.0</td>\n",
       "      <td>1660.0</td>\n",
       "      <td>180.0</td>\n",
       "      <td>78.0</td>\n",
       "      <td>1.5</td>\n",
       "      <td>2.Stock</td>\n",
       "      <td>nachVereinbarung</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1975.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>600.0</td>\n",
       "      <td>80.0</td>\n",
       "      <td>80.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>22104581</td>\n",
       "      <td>Wohnung</td>\n",
       "      <td>1890.0</td>\n",
       "      <td>1610.0</td>\n",
       "      <td>280.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4.5</td>\n",
       "      <td>3.Stock</td>\n",
       "      <td>sofort</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>22420912</td>\n",
       "      <td>Wohnung</td>\n",
       "      <td>1540.0</td>\n",
       "      <td>1450.0</td>\n",
       "      <td>90.0</td>\n",
       "      <td>36.0</td>\n",
       "      <td>1.5</td>\n",
       "      <td>7.Stock</td>\n",
       "      <td>nachVereinbarung</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2000.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>22483750</td>\n",
       "      <td>Wohnung</td>\n",
       "      <td>1350.0</td>\n",
       "      <td>1180.0</td>\n",
       "      <td>170.0</td>\n",
       "      <td>57.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>2.Stock</td>\n",
       "      <td>sofort</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3000.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2344 rows × 27 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         Objektart  MietpreisproMonat  MietpreisproMonat(exkl.NK)  \\\n",
       "23016581   Wohnung             1480.0                      1240.0   \n",
       "23016600   Wohnung             3500.0                      3200.0   \n",
       "23014342   Wohnung             1710.0                      1470.0   \n",
       "23017350   Wohnung             1180.0                      1030.0   \n",
       "23016559   Wohnung             1360.0                      1230.0   \n",
       "...            ...                ...                         ...   \n",
       "21825642   Wohnung             1430.0                      1290.0   \n",
       "20657528   Wohnung             1840.0                      1660.0   \n",
       "22104581   Wohnung             1890.0                      1610.0   \n",
       "22420912   Wohnung             1540.0                      1450.0   \n",
       "22483750   Wohnung             1350.0                      1180.0   \n",
       "\n",
       "          Nebenkosten  Wohnfläche  Zimmer Geschoss       Verfügbarab  \\\n",
       "23016581        240.0        68.0     3.0  2.Stock        01.05.2020   \n",
       "23016600        300.0       140.0     5.0  2.Stock        01.05.2020   \n",
       "23014342        240.0        73.0     3.5      NaN        01.03.2020   \n",
       "23017350        150.0         NaN     2.0  1.Stock        01.05.2020   \n",
       "23016559        130.0        44.0     2.5  3.Stock        01.06.2020   \n",
       "...               ...         ...     ...      ...               ...   \n",
       "21825642        140.0        35.0     2.5      NaN  nachVereinbarung   \n",
       "20657528        180.0        78.0     1.5  2.Stock  nachVereinbarung   \n",
       "22104581        280.0         NaN     4.5  3.Stock            sofort   \n",
       "22420912         90.0        36.0     1.5  7.Stock  nachVereinbarung   \n",
       "22483750        170.0        57.0     3.0  2.Stock            sofort   \n",
       "\n",
       "          Balkon(e)  Lift  ...  Baujahr  Aussenparkplatz  Haustiereerlaubt  \\\n",
       "23016581        1.0   1.0  ...      NaN              NaN               NaN   \n",
       "23016600        1.0   1.0  ...      NaN              NaN               NaN   \n",
       "23014342        1.0   1.0  ...   1965.0              1.0               1.0   \n",
       "23017350        1.0   NaN  ...      NaN              NaN               NaN   \n",
       "23016559        NaN   NaN  ...   1600.0              NaN               NaN   \n",
       "...             ...   ...  ...      ...              ...               ...   \n",
       "21825642        NaN   NaN  ...      NaN              NaN               NaN   \n",
       "20657528        NaN   1.0  ...   1975.0              NaN               1.0   \n",
       "22104581        NaN   NaN  ...      NaN              1.0               NaN   \n",
       "22420912        1.0   1.0  ...      NaN              NaN               NaN   \n",
       "22483750        1.0   NaN  ...      NaN              1.0               NaN   \n",
       "\n",
       "         Kabel-TV Kinderfreundlich Kindergarten Primarschule  Sekundarschule  \\\n",
       "23016581      NaN              NaN          NaN          NaN             NaN   \n",
       "23016600      NaN              NaN          NaN          NaN             NaN   \n",
       "23014342      1.0              1.0        700.0        700.0           700.0   \n",
       "23017350      NaN              NaN        350.0          NaN             NaN   \n",
       "23016559      1.0              NaN          NaN          NaN             NaN   \n",
       "...           ...              ...          ...          ...             ...   \n",
       "21825642      NaN              NaN        400.0        610.0             NaN   \n",
       "20657528      1.0              NaN        600.0         80.0            80.0   \n",
       "22104581      1.0              NaN          NaN          NaN             NaN   \n",
       "22420912      NaN              NaN          NaN          NaN             NaN   \n",
       "22483750      1.0              NaN          NaN          NaN             NaN   \n",
       "\n",
       "          Autobahn  Einstellplatz  \n",
       "23016581       NaN            NaN  \n",
       "23016600       NaN            NaN  \n",
       "23014342       NaN            NaN  \n",
       "23017350    1000.0            NaN  \n",
       "23016559       NaN            NaN  \n",
       "...            ...            ...  \n",
       "21825642       NaN            NaN  \n",
       "20657528       NaN            NaN  \n",
       "22104581       NaN            NaN  \n",
       "22420912    2000.0            NaN  \n",
       "22483750    3000.0            NaN  \n",
       "\n",
       "[2344 rows x 27 columns]"
      ]
     },
     "execution_count": 1106,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ds.shape[0]\n",
    "ds"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 2.1.2 columns with datetime"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Verfügbarab\n",
    "publication_date\n",
    "DateofScrapping\n",
    "Baujahr"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### a) Verfügbarab"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1107,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['01.05.2020', '01.03.2020', '01.06.2020', '01.04.2020',\n",
       "       '16.05.2020', nan, '01.07.2020', 'sofort', 'nachVereinbarung',\n",
       "       '15.03.2020', '15.04.2020', '14.03.2020', '15.05.2020',\n",
       "       '01.08.2020', '16.07.2020', '16.03.2020', '02.03.2020',\n",
       "       '31.10.2020', '09.03.2020', '15.07.2020', '16.04.2020',\n",
       "       '13.05.2020', '10.04.2020', '03.04.2020', '01.11.2020',\n",
       "       '05.04.2020', '17.04.2020', '11.05.2020', '01.10.2020',\n",
       "       '13.04.2020', '30.03.2020', '31.03.2020', '23.03.2020',\n",
       "       '04.05.2020', '05.07.2020', '10.03.2020', '01.12.2020',\n",
       "       '15.06.2020', '11.04.2020', '01.09.2020', '06.04.2020',\n",
       "       '04.04.2020', '13.03.2020', '27.03.2020', '09.04.2020',\n",
       "       '29.02.2020', '12.04.2020'], dtype=object)"
      ]
     },
     "execution_count": 1107,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ds['Verfügbarab'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1108,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2125"
      ]
     },
     "execution_count": 1108,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ds['Verfügbarab'].count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1109,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "ds['Verfügbarab'] = pd.to_datetime(ds.Verfügbarab, errors='ignore', format = \"%d.%m.%Y\") # infer_datetime_format=True,"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1110,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['01.05.2020', '01.03.2020', '01.06.2020', '01.04.2020',\n",
       "       '16.05.2020', nan, '01.07.2020', 'sofort', 'nachVereinbarung',\n",
       "       '15.03.2020', '15.04.2020', '14.03.2020', '15.05.2020',\n",
       "       '01.08.2020', '16.07.2020', '16.03.2020', '02.03.2020',\n",
       "       '31.10.2020', '09.03.2020', '15.07.2020', '16.04.2020',\n",
       "       '13.05.2020', '10.04.2020', '03.04.2020', '01.11.2020',\n",
       "       '05.04.2020', '17.04.2020', '11.05.2020', '01.10.2020',\n",
       "       '13.04.2020', '30.03.2020', '31.03.2020', '23.03.2020',\n",
       "       '04.05.2020', '05.07.2020', '10.03.2020', '01.12.2020',\n",
       "       '15.06.2020', '11.04.2020', '01.09.2020', '06.04.2020',\n",
       "       '04.04.2020', '13.03.2020', '27.03.2020', '09.04.2020',\n",
       "       '29.02.2020', '12.04.2020'], dtype=object)"
      ]
     },
     "execution_count": 1110,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ds.shape[0]\n",
    "#dscopy.groupby('Verfügbarab').count()\n",
    "ds['Verfügbarab'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1111,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([911.,  59.,  33.,  29.,   4.,   7.,  14.,   6.,   5.,   5.]),\n",
       " array([ 0. ,  4.3,  8.6, 12.9, 17.2, 21.5, 25.8, 30.1, 34.4, 38.7, 43. ]),\n",
       " <a list of 10 Patch objects>)"
      ]
     },
     "execution_count": 1111,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist(ds['Verfügbarab'].dropna()[(ds['Verfügbarab'] !='sofort') & (ds['Verfügbarab'] !='nachVereinbarung')])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### b) Date of scrapping"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1112,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['2020-02-26T00:00:00.000000000'], dtype='datetime64[ns]')"
      ]
     },
     "execution_count": 1112,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "ds['DateofScrapping'] = pd.to_datetime(ds.DateofScrapping, format = \"%d.%m.%Y\")\n",
    "plt.hist(ds.DateofScrapping)\n",
    "\n",
    "ds['DateofScrapping'].unique()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### c) Baujahr (year of construction)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1113,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Objektart</th>\n",
       "      <th>MietpreisproMonat</th>\n",
       "      <th>MietpreisproMonat(exkl.NK)</th>\n",
       "      <th>Nebenkosten</th>\n",
       "      <th>Wohnfläche</th>\n",
       "      <th>Zimmer</th>\n",
       "      <th>Geschoss</th>\n",
       "      <th>Verfügbarab</th>\n",
       "      <th>Balkon(e)</th>\n",
       "      <th>Lift</th>\n",
       "      <th>...</th>\n",
       "      <th>DateofScrapping</th>\n",
       "      <th>Aussenparkplatz</th>\n",
       "      <th>Haustiereerlaubt</th>\n",
       "      <th>Kabel-TV</th>\n",
       "      <th>Kinderfreundlich</th>\n",
       "      <th>Kindergarten</th>\n",
       "      <th>Primarschule</th>\n",
       "      <th>Sekundarschule</th>\n",
       "      <th>Autobahn</th>\n",
       "      <th>Einstellplatz</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Baujahr</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>1375.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1437.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1470.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1541.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1555.0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2016.0</td>\n",
       "      <td>26</td>\n",
       "      <td>26</td>\n",
       "      <td>25</td>\n",
       "      <td>25</td>\n",
       "      <td>23</td>\n",
       "      <td>26</td>\n",
       "      <td>25</td>\n",
       "      <td>22</td>\n",
       "      <td>17</td>\n",
       "      <td>18</td>\n",
       "      <td>...</td>\n",
       "      <td>26</td>\n",
       "      <td>6</td>\n",
       "      <td>12</td>\n",
       "      <td>11</td>\n",
       "      <td>8</td>\n",
       "      <td>13</td>\n",
       "      <td>9</td>\n",
       "      <td>7</td>\n",
       "      <td>10</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2017.0</td>\n",
       "      <td>22</td>\n",
       "      <td>22</td>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "      <td>19</td>\n",
       "      <td>22</td>\n",
       "      <td>22</td>\n",
       "      <td>21</td>\n",
       "      <td>17</td>\n",
       "      <td>17</td>\n",
       "      <td>...</td>\n",
       "      <td>22</td>\n",
       "      <td>7</td>\n",
       "      <td>5</td>\n",
       "      <td>13</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2018.0</td>\n",
       "      <td>28</td>\n",
       "      <td>28</td>\n",
       "      <td>24</td>\n",
       "      <td>24</td>\n",
       "      <td>28</td>\n",
       "      <td>28</td>\n",
       "      <td>28</td>\n",
       "      <td>27</td>\n",
       "      <td>20</td>\n",
       "      <td>22</td>\n",
       "      <td>...</td>\n",
       "      <td>28</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>15</td>\n",
       "      <td>9</td>\n",
       "      <td>10</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>8</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2019.0</td>\n",
       "      <td>35</td>\n",
       "      <td>35</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>30</td>\n",
       "      <td>35</td>\n",
       "      <td>28</td>\n",
       "      <td>33</td>\n",
       "      <td>27</td>\n",
       "      <td>27</td>\n",
       "      <td>...</td>\n",
       "      <td>35</td>\n",
       "      <td>10</td>\n",
       "      <td>14</td>\n",
       "      <td>17</td>\n",
       "      <td>12</td>\n",
       "      <td>18</td>\n",
       "      <td>19</td>\n",
       "      <td>13</td>\n",
       "      <td>11</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2020.0</td>\n",
       "      <td>22</td>\n",
       "      <td>22</td>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "      <td>22</td>\n",
       "      <td>22</td>\n",
       "      <td>12</td>\n",
       "      <td>22</td>\n",
       "      <td>22</td>\n",
       "      <td>20</td>\n",
       "      <td>...</td>\n",
       "      <td>22</td>\n",
       "      <td>6</td>\n",
       "      <td>8</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "      <td>13</td>\n",
       "      <td>7</td>\n",
       "      <td>13</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>130 rows × 26 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         Objektart  MietpreisproMonat  MietpreisproMonat(exkl.NK)  \\\n",
       "Baujahr                                                             \n",
       "1375.0           1                  1                           1   \n",
       "1437.0           1                  1                           0   \n",
       "1470.0           1                  1                           1   \n",
       "1541.0           1                  1                           1   \n",
       "1555.0           1                  1                           1   \n",
       "...            ...                ...                         ...   \n",
       "2016.0          26                 26                          25   \n",
       "2017.0          22                 22                          16   \n",
       "2018.0          28                 28                          24   \n",
       "2019.0          35                 35                          30   \n",
       "2020.0          22                 22                          16   \n",
       "\n",
       "         Nebenkosten  Wohnfläche  Zimmer  Geschoss  Verfügbarab  Balkon(e)  \\\n",
       "Baujahr                                                                      \n",
       "1375.0             1           1       1         1            1          0   \n",
       "1437.0             0           1       1         1            1          0   \n",
       "1470.0             1           1       1         1            1          0   \n",
       "1541.0             1           1       1         1            1          0   \n",
       "1555.0             1           1       1         1            1          0   \n",
       "...              ...         ...     ...       ...          ...        ...   \n",
       "2016.0            25          23      26        25           22         17   \n",
       "2017.0            16          19      22        22           21         17   \n",
       "2018.0            24          28      28        28           27         20   \n",
       "2019.0            30          30      35        28           33         27   \n",
       "2020.0            16          22      22        12           22         22   \n",
       "\n",
       "         Lift  ...  DateofScrapping  Aussenparkplatz  Haustiereerlaubt  \\\n",
       "Baujahr        ...                                                       \n",
       "1375.0      1  ...                1                0                 1   \n",
       "1437.0      0  ...                1                0                 0   \n",
       "1470.0      0  ...                1                0                 0   \n",
       "1541.0      0  ...                1                1                 0   \n",
       "1555.0      0  ...                1                0                 0   \n",
       "...       ...  ...              ...              ...               ...   \n",
       "2016.0     18  ...               26                6                12   \n",
       "2017.0     17  ...               22                7                 5   \n",
       "2018.0     22  ...               28                6                 6   \n",
       "2019.0     27  ...               35               10                14   \n",
       "2020.0     20  ...               22                6                 8   \n",
       "\n",
       "         Kabel-TV  Kinderfreundlich  Kindergarten  Primarschule  \\\n",
       "Baujahr                                                           \n",
       "1375.0          1                 0             0             0   \n",
       "1437.0          1                 0             0             0   \n",
       "1470.0          1                 0             0             0   \n",
       "1541.0          0                 0             0             0   \n",
       "1555.0          0                 0             0             0   \n",
       "...           ...               ...           ...           ...   \n",
       "2016.0         11                 8            13             9   \n",
       "2017.0         13                 5             6             6   \n",
       "2018.0         15                 9            10            11   \n",
       "2019.0         17                12            18            19   \n",
       "2020.0          5                 5            15            15   \n",
       "\n",
       "         Sekundarschule  Autobahn  Einstellplatz  \n",
       "Baujahr                                           \n",
       "1375.0                0         0              0  \n",
       "1437.0                0         0              0  \n",
       "1470.0                0         0              0  \n",
       "1541.0                0         0              0  \n",
       "1555.0                0         0              0  \n",
       "...                 ...       ...            ...  \n",
       "2016.0                7        10             14  \n",
       "2017.0                3         6             10  \n",
       "2018.0                1         8             14  \n",
       "2019.0               13        11             12  \n",
       "2020.0               13         7             13  \n",
       "\n",
       "[130 rows x 26 columns]"
      ]
     },
     "execution_count": 1113,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ds.groupby('Baujahr').count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1114,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([None, 1965, 1600, 2014, 1923, 2018, 1988, 1934, 1953, 1960, 2013,\n",
       "       1967, 1980, 1555, 1972, 1896, 2003, 1979, 1971, 1951, 2017, 1942,\n",
       "       1948, 2016, 1961, 1976, 1964, 2020, 1931, 1920, 1938, 1992, 1954,\n",
       "       1731, 1929, 1905, 1927, 1950, 1899, 2010, 1990, 1932, 1930, 1907,\n",
       "       1974, 1977, 1882, 1956, 2009, 1991, 2012, 1910, 2000, 1943, 1966,\n",
       "       1941, 1906, 1900, 1981, 1957, 1970, 1999, 1912, 1949, 2019, 1895,\n",
       "       1973, 1940, 1983, 1946, 1936, 1962, 2005, 1952, 1916, 1935, 1470,\n",
       "       1945, 1700, 1995, 2008, 1969, 1984, 1958, 1968, 2015, 1987, 2001,\n",
       "       1996, 1903, 1886, 1959, 1955, 1894, 1911, 2007, 1982, 1989, 1890,\n",
       "       1541, 1901, 1898, 1998, 1975, 1947, 1978, 2002, 2004, 1926, 1875,\n",
       "       1993, 2006, 1963, 1924, 1997, 1985, 1921, 2011, 1933, 1897, 1908,\n",
       "       1558, 1858, 1375, 1904, 1994, 1437, 1642, 1909, 1939, 1772],\n",
       "      dtype=object)"
      ]
     },
     "execution_count": 1114,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "ds['Baujahr'] = pd.to_datetime(ds.Baujahr, errors='ignore', format = \"%Y\")\n",
    "#plt.hist(ds.Baujahr)\n",
    "\n",
    "ds['Baujahr'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "##### d) publication_date"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1115,
   "metadata": {},
   "outputs": [],
   "source": [
    "## change type, but dont drop nan"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1116,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array(['25.02.2020', '24.02.2020', '26.02.2020', nan, '23.02.2020',\n",
       "       '21.02.2020', '20.02.2020', '19.02.2020', '18.02.2020',\n",
       "       '17.02.2020', '16.02.2020', '15.02.2020', '14.02.2020',\n",
       "       '13.02.2020', '12.02.2020', '11.02.2020', '10.02.2020',\n",
       "       '09.02.2020', '08.02.2020', '07.02.2020', '06.02.2020',\n",
       "       '05.02.2020', '04.02.2020', '03.02.2020', '31.01.2020',\n",
       "       '29.01.2020', '28.01.2020', '27.01.2020', '24.01.2020',\n",
       "       '25.01.2020', '23.01.2020', '22.01.2020', '21.01.2020',\n",
       "       '20.01.2020', '17.01.2020', '16.01.2020', '15.01.2020',\n",
       "       '14.01.2020', '11.01.2020', '13.01.2020', '10.01.2020',\n",
       "       '09.01.2020', '08.01.2020', '07.01.2020', '03.01.2020',\n",
       "       '06.01.2020', '04.01.2020', '02.01.2020', '31.12.2019',\n",
       "       '28.12.2019', '24.12.2019', '23.12.2019', '20.12.2019',\n",
       "       '19.12.2019', '12.12.2019', '17.12.2019', '11.12.2019',\n",
       "       '10.12.2019', '09.12.2019', '06.12.2019', '05.12.2019',\n",
       "       '01.12.2019', '03.12.2019', '04.12.2019', '25.11.2019',\n",
       "       '29.11.2019', '21.11.2019', '15.11.2019', '14.11.2019',\n",
       "       '22.11.2019', '20.11.2019', '19.11.2019', '06.11.2019',\n",
       "       '13.11.2019', '01.11.2019', '04.11.2019', '31.10.2019',\n",
       "       '28.10.2019', '29.10.2019', '25.10.2019', '15.10.2019',\n",
       "       '18.10.2019', '26.10.2019', '07.10.2019', '27.09.2019',\n",
       "       '06.10.2019', '08.10.2019', '03.10.2019', '23.09.2019',\n",
       "       '25.09.2019', '18.09.2019', '15.08.2019', '13.09.2019',\n",
       "       '11.09.2019', '14.08.2019', '09.09.2019', '13.08.2019',\n",
       "       '29.07.2019', '08.08.2019', '20.06.2019', '02.07.2019',\n",
       "       '12.08.2019', '13.03.2019', '14.03.2019', '03.05.2019',\n",
       "       '26.04.2019', '16.03.2019', '22.02.2020', '02.02.2020',\n",
       "       '01.02.2020', '30.01.2020', '26.01.2020', '18.01.2020',\n",
       "       '12.01.2020', '05.01.2020', '30.12.2019', '27.12.2019',\n",
       "       '25.12.2019', '18.12.2019', '16.12.2019', '14.12.2019',\n",
       "       '13.12.2019', '07.12.2019', '28.11.2019', '27.11.2019',\n",
       "       '02.12.2019', '26.11.2019', '12.11.2019', '07.11.2019',\n",
       "       '11.11.2019', '08.11.2019', '02.11.2019', '30.10.2019',\n",
       "       '23.10.2019', '22.10.2019', '17.10.2019', '16.10.2019',\n",
       "       '20.10.2019', '11.10.2019', '14.10.2019', '30.09.2019',\n",
       "       '01.10.2019', '02.10.2019', '24.09.2019', '16.09.2019',\n",
       "       '20.09.2019', '17.09.2019', '07.09.2019', '06.09.2019',\n",
       "       '05.09.2019', '12.09.2019', '29.08.2019', '04.09.2019',\n",
       "       '03.09.2019', '30.08.2019', '26.08.2019', '19.08.2019',\n",
       "       '23.08.2019', '21.08.2019', '09.08.2019', '22.07.2019',\n",
       "       '27.07.2019', '17.07.2019', '16.07.2019', '15.07.2019',\n",
       "       '07.08.2019', '19.07.2019', '30.07.2019', '10.07.2019',\n",
       "       '18.11.2019', '05.07.2019', '29.06.2019', '26.06.2019',\n",
       "       '06.06.2019', '14.06.2019', '08.06.2019', '21.06.2019',\n",
       "       '07.06.2019', '21.05.2019', '03.06.2019', '10.05.2019',\n",
       "       '08.05.2019', '26.03.2019', '22.03.2019', '27.03.2019',\n",
       "       '17.05.2019', '31.03.2019', '07.03.2019', '16.01.2019',\n",
       "       '01.03.2019', '21.03.2019', '01.02.2019', '18.02.2019',\n",
       "       '26.02.2019'], dtype=object)"
      ]
     },
     "execution_count": 1116,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ds['publication_date'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1117,
   "metadata": {
    "scrolled": false
   },
   "outputs": [],
   "source": [
    "ds['publication_date']= pd.to_datetime(ds['publication_date'], format = \"%d.%m.%Y\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1118,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Objektart</th>\n",
       "      <th>MietpreisproMonat</th>\n",
       "      <th>MietpreisproMonat(exkl.NK)</th>\n",
       "      <th>Nebenkosten</th>\n",
       "      <th>Wohnfläche</th>\n",
       "      <th>Zimmer</th>\n",
       "      <th>Geschoss</th>\n",
       "      <th>Verfügbarab</th>\n",
       "      <th>Balkon(e)</th>\n",
       "      <th>Lift</th>\n",
       "      <th>...</th>\n",
       "      <th>Baujahr</th>\n",
       "      <th>Aussenparkplatz</th>\n",
       "      <th>Haustiereerlaubt</th>\n",
       "      <th>Kabel-TV</th>\n",
       "      <th>Kinderfreundlich</th>\n",
       "      <th>Kindergarten</th>\n",
       "      <th>Primarschule</th>\n",
       "      <th>Sekundarschule</th>\n",
       "      <th>Autobahn</th>\n",
       "      <th>Einstellplatz</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>publication_date</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>2019-01-16</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2019-02-01</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2019-02-18</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2019-02-26</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2019-03-01</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2020-02-22</td>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>7</td>\n",
       "      <td>12</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>6</td>\n",
       "      <td>5</td>\n",
       "      <td>...</td>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2020-02-23</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2020-02-24</td>\n",
       "      <td>112</td>\n",
       "      <td>112</td>\n",
       "      <td>52</td>\n",
       "      <td>52</td>\n",
       "      <td>73</td>\n",
       "      <td>109</td>\n",
       "      <td>64</td>\n",
       "      <td>99</td>\n",
       "      <td>59</td>\n",
       "      <td>34</td>\n",
       "      <td>...</td>\n",
       "      <td>37</td>\n",
       "      <td>20</td>\n",
       "      <td>13</td>\n",
       "      <td>35</td>\n",
       "      <td>8</td>\n",
       "      <td>20</td>\n",
       "      <td>21</td>\n",
       "      <td>17</td>\n",
       "      <td>12</td>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2020-02-25</td>\n",
       "      <td>75</td>\n",
       "      <td>75</td>\n",
       "      <td>49</td>\n",
       "      <td>49</td>\n",
       "      <td>53</td>\n",
       "      <td>72</td>\n",
       "      <td>62</td>\n",
       "      <td>62</td>\n",
       "      <td>45</td>\n",
       "      <td>24</td>\n",
       "      <td>...</td>\n",
       "      <td>28</td>\n",
       "      <td>14</td>\n",
       "      <td>10</td>\n",
       "      <td>35</td>\n",
       "      <td>6</td>\n",
       "      <td>13</td>\n",
       "      <td>12</td>\n",
       "      <td>11</td>\n",
       "      <td>11</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2020-02-26</td>\n",
       "      <td>98</td>\n",
       "      <td>98</td>\n",
       "      <td>59</td>\n",
       "      <td>59</td>\n",
       "      <td>69</td>\n",
       "      <td>97</td>\n",
       "      <td>73</td>\n",
       "      <td>89</td>\n",
       "      <td>46</td>\n",
       "      <td>30</td>\n",
       "      <td>...</td>\n",
       "      <td>39</td>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "      <td>37</td>\n",
       "      <td>10</td>\n",
       "      <td>16</td>\n",
       "      <td>18</td>\n",
       "      <td>10</td>\n",
       "      <td>18</td>\n",
       "      <td>14</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>193 rows × 26 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                  Objektart  MietpreisproMonat  MietpreisproMonat(exkl.NK)  \\\n",
       "publication_date                                                             \n",
       "2019-01-16                1                  1                           0   \n",
       "2019-02-01                1                  1                           1   \n",
       "2019-02-18                1                  1                           1   \n",
       "2019-02-26                1                  1                           1   \n",
       "2019-03-01                2                  2                           2   \n",
       "...                     ...                ...                         ...   \n",
       "2020-02-22               12                 12                           6   \n",
       "2020-02-23                4                  4                           1   \n",
       "2020-02-24              112                112                          52   \n",
       "2020-02-25               75                 75                          49   \n",
       "2020-02-26               98                 98                          59   \n",
       "\n",
       "                  Nebenkosten  Wohnfläche  Zimmer  Geschoss  Verfügbarab  \\\n",
       "publication_date                                                           \n",
       "2019-01-16                  0           1       1         1            1   \n",
       "2019-02-01                  1           1       1         1            1   \n",
       "2019-02-18                  1           1       1         1            1   \n",
       "2019-02-26                  1           0       1         1            1   \n",
       "2019-03-01                  2           2       2         2            2   \n",
       "...                       ...         ...     ...       ...          ...   \n",
       "2020-02-22                  6           7      12        10           10   \n",
       "2020-02-23                  1           3       4         1            4   \n",
       "2020-02-24                 52          73     109        64           99   \n",
       "2020-02-25                 49          53      72        62           62   \n",
       "2020-02-26                 59          69      97        73           89   \n",
       "\n",
       "                  Balkon(e)  Lift  ...  Baujahr  Aussenparkplatz  \\\n",
       "publication_date                   ...                             \n",
       "2019-01-16                1     1  ...        0                1   \n",
       "2019-02-01                1     1  ...        0                1   \n",
       "2019-02-18                0     1  ...        1                0   \n",
       "2019-02-26                0     0  ...        0                1   \n",
       "2019-03-01                2     2  ...        0                0   \n",
       "...                     ...   ...  ...      ...              ...   \n",
       "2020-02-22                6     5  ...        4                5   \n",
       "2020-02-23                1     0  ...        1                0   \n",
       "2020-02-24               59    34  ...       37               20   \n",
       "2020-02-25               45    24  ...       28               14   \n",
       "2020-02-26               46    30  ...       39               15   \n",
       "\n",
       "                  Haustiereerlaubt  Kabel-TV  Kinderfreundlich  Kindergarten  \\\n",
       "publication_date                                                               \n",
       "2019-01-16                       1         1                 0             0   \n",
       "2019-02-01                       0         1                 1             1   \n",
       "2019-02-18                       1         1                 0             1   \n",
       "2019-02-26                       0         1                 0             0   \n",
       "2019-03-01                       0         0                 1             0   \n",
       "...                            ...       ...               ...           ...   \n",
       "2020-02-22                       0         5                 2             2   \n",
       "2020-02-23                       1         1                 1             0   \n",
       "2020-02-24                      13        35                 8            20   \n",
       "2020-02-25                      10        35                 6            13   \n",
       "2020-02-26                      15        37                10            16   \n",
       "\n",
       "                  Primarschule  Sekundarschule  Autobahn  Einstellplatz  \n",
       "publication_date                                                         \n",
       "2019-01-16                   0               0         0              1  \n",
       "2019-02-01                   1               0         1              0  \n",
       "2019-02-18                   1               1         0              0  \n",
       "2019-02-26                   0               0         0              0  \n",
       "2019-03-01                   0               0         2              0  \n",
       "...                        ...             ...       ...            ...  \n",
       "2020-02-22                   2               1         0              2  \n",
       "2020-02-23                   0               0         0              0  \n",
       "2020-02-24                  21              17        12             16  \n",
       "2020-02-25                  12              11        11             17  \n",
       "2020-02-26                  18              10        18             14  \n",
       "\n",
       "[193 rows x 26 columns]"
      ]
     },
     "execution_count": 1118,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ds.groupby('publication_date').count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1119,
   "metadata": {},
   "outputs": [],
   "source": [
    "ds['publication_date'] = pd.to_datetime(ds.publication_date, errors='ignore', format = \"%d.%m.%Y\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1120,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2303"
      ]
     },
     "execution_count": 1120,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dscopy['publication_date'] = ds['publication_date'].dropna()\n",
    "dscopy.shape[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1121,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([ 356.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,    0.,\n",
       "        1947.]),\n",
       " array([612411.0088327 , 624918.00794943, 637425.00706616, 649932.00618289,\n",
       "        662439.00529962, 674946.00441635, 687453.00353308, 699960.00264981,\n",
       "        712467.00176654, 724974.00088327, 737481.        ]),\n",
       " <a list of 10 Patch objects>)"
      ]
     },
     "execution_count": 1121,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist(dscopy['publication_date'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1122,
   "metadata": {},
   "outputs": [],
   "source": [
    "### 2.2.3 Booleans\n",
    "\n",
    "col =['Balkon(e)', 'Lift',   'Aussenparkplatz', 'Haustiereerlaubt', 'Kabel-TV', 'Kinderfreundlich','Einstellplatz']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1123,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[ 1. nan]\n",
      "[ 1. nan]\n",
      "[nan  1.]\n",
      "[nan  1.]\n",
      "[nan  1.]\n",
      "[nan  1.]\n",
      "[nan  1.]\n"
     ]
    }
   ],
   "source": [
    "for x in col: \n",
    "    print(ds[x].unique())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1124,
   "metadata": {},
   "outputs": [],
   "source": [
    "### 2.2.4 Rest"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1125,
   "metadata": {},
   "outputs": [],
   "source": [
    "col =['Objektart', 'Geschoss',  'city']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1126,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['Wohnung' 'Einzelzimmer' 'Studio' 'Dachwohnung' 'Attika' 'Maisonette'\n",
      " 'Loft' 'Terrassenwohnung']\n",
      "['2.Stock' nan '1.Stock' '3.Stock' '6.Stock' 'EG' '9.Stock' '4.Stock'\n",
      " 'Untergeschoss' '5.Stock' '7.Stock' '10.Stock' '8.Stock' '14.Stock'\n",
      " '11.Stock' '19.Stock' '17.Stock' '13.Stock' '20.Stock' '22.Stock'\n",
      " '18.Stock' '28.Stock' '12.Stock' '26.Stock']\n",
      "['bern' 'zuerich' 'luzern']\n"
     ]
    }
   ],
   "source": [
    "for x in col: \n",
    "    print(ds[x].unique())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1127,
   "metadata": {},
   "outputs": [],
   "source": [
    "ds['Geschoss']= ds.Geschoss.apply(lambda y: float(str(y).replace(\".Stock\",\"\").replace(\"EG\",\"0\").replace(\"Untergeschoss\",\"-1\")))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1128,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([ 33.,   0., 151.,   0.,   0., 245.,   0., 207.,   0.,  37.]),\n",
       " array([2. , 2.4, 2.8, 3.2, 3.6, 4. , 4.4, 4.8, 5.2, 5.6, 6. ]),\n",
       " <a list of 10 Patch objects>)"
      ]
     },
     "execution_count": 1128,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist(ds['rating'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 3. Cleaning on micro level"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1129,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Objektart</th>\n",
       "      <th>MietpreisproMonat</th>\n",
       "      <th>MietpreisproMonat(exkl.NK)</th>\n",
       "      <th>Nebenkosten</th>\n",
       "      <th>Wohnfläche</th>\n",
       "      <th>Zimmer</th>\n",
       "      <th>Geschoss</th>\n",
       "      <th>Verfügbarab</th>\n",
       "      <th>Balkon(e)</th>\n",
       "      <th>Lift</th>\n",
       "      <th>...</th>\n",
       "      <th>Baujahr</th>\n",
       "      <th>Aussenparkplatz</th>\n",
       "      <th>Haustiereerlaubt</th>\n",
       "      <th>Kabel-TV</th>\n",
       "      <th>Kinderfreundlich</th>\n",
       "      <th>Kindergarten</th>\n",
       "      <th>Primarschule</th>\n",
       "      <th>Sekundarschule</th>\n",
       "      <th>Autobahn</th>\n",
       "      <th>Einstellplatz</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>23016581</td>\n",
       "      <td>Wohnung</td>\n",
       "      <td>1480.0</td>\n",
       "      <td>1240.0</td>\n",
       "      <td>240.0</td>\n",
       "      <td>68.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>01.05.2020</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>None</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>23016600</td>\n",
       "      <td>Wohnung</td>\n",
       "      <td>3500.0</td>\n",
       "      <td>3200.0</td>\n",
       "      <td>300.0</td>\n",
       "      <td>140.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>01.05.2020</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>None</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>23014342</td>\n",
       "      <td>Wohnung</td>\n",
       "      <td>1710.0</td>\n",
       "      <td>1470.0</td>\n",
       "      <td>240.0</td>\n",
       "      <td>73.0</td>\n",
       "      <td>3.5</td>\n",
       "      <td>NaN</td>\n",
       "      <td>01.03.2020</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1965</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>700.0</td>\n",
       "      <td>700.0</td>\n",
       "      <td>700.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>23017350</td>\n",
       "      <td>Wohnung</td>\n",
       "      <td>1180.0</td>\n",
       "      <td>1030.0</td>\n",
       "      <td>150.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>01.05.2020</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>None</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>350.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1000.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>23016559</td>\n",
       "      <td>Wohnung</td>\n",
       "      <td>1360.0</td>\n",
       "      <td>1230.0</td>\n",
       "      <td>130.0</td>\n",
       "      <td>44.0</td>\n",
       "      <td>2.5</td>\n",
       "      <td>3.0</td>\n",
       "      <td>01.06.2020</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>1600</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>21825642</td>\n",
       "      <td>Wohnung</td>\n",
       "      <td>1430.0</td>\n",
       "      <td>1290.0</td>\n",
       "      <td>140.0</td>\n",
       "      <td>35.0</td>\n",
       "      <td>2.5</td>\n",
       "      <td>NaN</td>\n",
       "      <td>nachVereinbarung</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>None</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>400.0</td>\n",
       "      <td>610.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>20657528</td>\n",
       "      <td>Wohnung</td>\n",
       "      <td>1840.0</td>\n",
       "      <td>1660.0</td>\n",
       "      <td>180.0</td>\n",
       "      <td>78.0</td>\n",
       "      <td>1.5</td>\n",
       "      <td>2.0</td>\n",
       "      <td>nachVereinbarung</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1975</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>600.0</td>\n",
       "      <td>80.0</td>\n",
       "      <td>80.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>22104581</td>\n",
       "      <td>Wohnung</td>\n",
       "      <td>1890.0</td>\n",
       "      <td>1610.0</td>\n",
       "      <td>280.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4.5</td>\n",
       "      <td>3.0</td>\n",
       "      <td>sofort</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>None</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>22420912</td>\n",
       "      <td>Wohnung</td>\n",
       "      <td>1540.0</td>\n",
       "      <td>1450.0</td>\n",
       "      <td>90.0</td>\n",
       "      <td>36.0</td>\n",
       "      <td>1.5</td>\n",
       "      <td>7.0</td>\n",
       "      <td>nachVereinbarung</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>None</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2000.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>22483750</td>\n",
       "      <td>Wohnung</td>\n",
       "      <td>1350.0</td>\n",
       "      <td>1180.0</td>\n",
       "      <td>170.0</td>\n",
       "      <td>57.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>sofort</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>None</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3000.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2344 rows × 27 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         Objektart  MietpreisproMonat  MietpreisproMonat(exkl.NK)  \\\n",
       "23016581   Wohnung             1480.0                      1240.0   \n",
       "23016600   Wohnung             3500.0                      3200.0   \n",
       "23014342   Wohnung             1710.0                      1470.0   \n",
       "23017350   Wohnung             1180.0                      1030.0   \n",
       "23016559   Wohnung             1360.0                      1230.0   \n",
       "...            ...                ...                         ...   \n",
       "21825642   Wohnung             1430.0                      1290.0   \n",
       "20657528   Wohnung             1840.0                      1660.0   \n",
       "22104581   Wohnung             1890.0                      1610.0   \n",
       "22420912   Wohnung             1540.0                      1450.0   \n",
       "22483750   Wohnung             1350.0                      1180.0   \n",
       "\n",
       "          Nebenkosten  Wohnfläche  Zimmer  Geschoss       Verfügbarab  \\\n",
       "23016581        240.0        68.0     3.0       2.0        01.05.2020   \n",
       "23016600        300.0       140.0     5.0       2.0        01.05.2020   \n",
       "23014342        240.0        73.0     3.5       NaN        01.03.2020   \n",
       "23017350        150.0         NaN     2.0       1.0        01.05.2020   \n",
       "23016559        130.0        44.0     2.5       3.0        01.06.2020   \n",
       "...               ...         ...     ...       ...               ...   \n",
       "21825642        140.0        35.0     2.5       NaN  nachVereinbarung   \n",
       "20657528        180.0        78.0     1.5       2.0  nachVereinbarung   \n",
       "22104581        280.0         NaN     4.5       3.0            sofort   \n",
       "22420912         90.0        36.0     1.5       7.0  nachVereinbarung   \n",
       "22483750        170.0        57.0     3.0       2.0            sofort   \n",
       "\n",
       "          Balkon(e)  Lift  ...  Baujahr  Aussenparkplatz  Haustiereerlaubt  \\\n",
       "23016581        1.0   1.0  ...     None              NaN               NaN   \n",
       "23016600        1.0   1.0  ...     None              NaN               NaN   \n",
       "23014342        1.0   1.0  ...     1965              1.0               1.0   \n",
       "23017350        1.0   NaN  ...     None              NaN               NaN   \n",
       "23016559        NaN   NaN  ...     1600              NaN               NaN   \n",
       "...             ...   ...  ...      ...              ...               ...   \n",
       "21825642        NaN   NaN  ...     None              NaN               NaN   \n",
       "20657528        NaN   1.0  ...     1975              NaN               1.0   \n",
       "22104581        NaN   NaN  ...     None              1.0               NaN   \n",
       "22420912        1.0   1.0  ...     None              NaN               NaN   \n",
       "22483750        1.0   NaN  ...     None              1.0               NaN   \n",
       "\n",
       "         Kabel-TV Kinderfreundlich Kindergarten Primarschule Sekundarschule  \\\n",
       "23016581      NaN              NaN          NaN          NaN            NaN   \n",
       "23016600      NaN              NaN          NaN          NaN            NaN   \n",
       "23014342      1.0              1.0        700.0        700.0          700.0   \n",
       "23017350      NaN              NaN        350.0          NaN            NaN   \n",
       "23016559      1.0              NaN          NaN          NaN            NaN   \n",
       "...           ...              ...          ...          ...            ...   \n",
       "21825642      NaN              NaN        400.0        610.0            NaN   \n",
       "20657528      1.0              NaN        600.0         80.0           80.0   \n",
       "22104581      1.0              NaN          NaN          NaN            NaN   \n",
       "22420912      NaN              NaN          NaN          NaN            NaN   \n",
       "22483750      1.0              NaN          NaN          NaN            NaN   \n",
       "\n",
       "          Autobahn  Einstellplatz  \n",
       "23016581       NaN            NaN  \n",
       "23016600       NaN            NaN  \n",
       "23014342       NaN            NaN  \n",
       "23017350    1000.0            NaN  \n",
       "23016559       NaN            NaN  \n",
       "...            ...            ...  \n",
       "21825642       NaN            NaN  \n",
       "20657528       NaN            NaN  \n",
       "22104581       NaN            NaN  \n",
       "22420912    2000.0            NaN  \n",
       "22483750    3000.0            NaN  \n",
       "\n",
       "[2344 rows x 27 columns]"
      ]
     },
     "execution_count": 1129,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ds.columns\n",
    "ds"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 3.1 not the info i wanted..."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1130,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Objektart</th>\n",
       "      <th>MietpreisproMonat</th>\n",
       "      <th>MietpreisproMonat(exkl.NK)</th>\n",
       "      <th>Nebenkosten</th>\n",
       "      <th>Wohnfläche</th>\n",
       "      <th>Zimmer</th>\n",
       "      <th>Geschoss</th>\n",
       "      <th>Verfügbarab</th>\n",
       "      <th>Balkon(e)</th>\n",
       "      <th>Lift</th>\n",
       "      <th>...</th>\n",
       "      <th>Baujahr</th>\n",
       "      <th>Aussenparkplatz</th>\n",
       "      <th>Haustiereerlaubt</th>\n",
       "      <th>Kabel-TV</th>\n",
       "      <th>Kinderfreundlich</th>\n",
       "      <th>Kindergarten</th>\n",
       "      <th>Primarschule</th>\n",
       "      <th>Sekundarschule</th>\n",
       "      <th>Autobahn</th>\n",
       "      <th>Einstellplatz</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>23016581</td>\n",
       "      <td>Wohnung</td>\n",
       "      <td>1480.0</td>\n",
       "      <td>1240.0</td>\n",
       "      <td>240.0</td>\n",
       "      <td>68.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>01.05.2020</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>None</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>23016600</td>\n",
       "      <td>Wohnung</td>\n",
       "      <td>3500.0</td>\n",
       "      <td>3200.0</td>\n",
       "      <td>300.0</td>\n",
       "      <td>140.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>01.05.2020</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>None</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>23014342</td>\n",
       "      <td>Wohnung</td>\n",
       "      <td>1710.0</td>\n",
       "      <td>1470.0</td>\n",
       "      <td>240.0</td>\n",
       "      <td>73.0</td>\n",
       "      <td>3.5</td>\n",
       "      <td>NaN</td>\n",
       "      <td>01.03.2020</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1965</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>700.0</td>\n",
       "      <td>700.0</td>\n",
       "      <td>700.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>23017350</td>\n",
       "      <td>Wohnung</td>\n",
       "      <td>1180.0</td>\n",
       "      <td>1030.0</td>\n",
       "      <td>150.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>01.05.2020</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>None</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>350.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1000.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>23016559</td>\n",
       "      <td>Wohnung</td>\n",
       "      <td>1360.0</td>\n",
       "      <td>1230.0</td>\n",
       "      <td>130.0</td>\n",
       "      <td>44.0</td>\n",
       "      <td>2.5</td>\n",
       "      <td>3.0</td>\n",
       "      <td>01.06.2020</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>1600</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>21825642</td>\n",
       "      <td>Wohnung</td>\n",
       "      <td>1430.0</td>\n",
       "      <td>1290.0</td>\n",
       "      <td>140.0</td>\n",
       "      <td>35.0</td>\n",
       "      <td>2.5</td>\n",
       "      <td>NaN</td>\n",
       "      <td>nachVereinbarung</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>None</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>400.0</td>\n",
       "      <td>610.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>20657528</td>\n",
       "      <td>Wohnung</td>\n",
       "      <td>1840.0</td>\n",
       "      <td>1660.0</td>\n",
       "      <td>180.0</td>\n",
       "      <td>78.0</td>\n",
       "      <td>1.5</td>\n",
       "      <td>2.0</td>\n",
       "      <td>nachVereinbarung</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1975</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>600.0</td>\n",
       "      <td>80.0</td>\n",
       "      <td>80.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>22104581</td>\n",
       "      <td>Wohnung</td>\n",
       "      <td>1890.0</td>\n",
       "      <td>1610.0</td>\n",
       "      <td>280.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4.5</td>\n",
       "      <td>3.0</td>\n",
       "      <td>sofort</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>None</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>22420912</td>\n",
       "      <td>Wohnung</td>\n",
       "      <td>1540.0</td>\n",
       "      <td>1450.0</td>\n",
       "      <td>90.0</td>\n",
       "      <td>36.0</td>\n",
       "      <td>1.5</td>\n",
       "      <td>7.0</td>\n",
       "      <td>nachVereinbarung</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>None</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2000.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>22483750</td>\n",
       "      <td>Wohnung</td>\n",
       "      <td>1350.0</td>\n",
       "      <td>1180.0</td>\n",
       "      <td>170.0</td>\n",
       "      <td>57.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>sofort</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>None</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3000.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2344 rows × 27 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         Objektart  MietpreisproMonat  MietpreisproMonat(exkl.NK)  \\\n",
       "23016581   Wohnung             1480.0                      1240.0   \n",
       "23016600   Wohnung             3500.0                      3200.0   \n",
       "23014342   Wohnung             1710.0                      1470.0   \n",
       "23017350   Wohnung             1180.0                      1030.0   \n",
       "23016559   Wohnung             1360.0                      1230.0   \n",
       "...            ...                ...                         ...   \n",
       "21825642   Wohnung             1430.0                      1290.0   \n",
       "20657528   Wohnung             1840.0                      1660.0   \n",
       "22104581   Wohnung             1890.0                      1610.0   \n",
       "22420912   Wohnung             1540.0                      1450.0   \n",
       "22483750   Wohnung             1350.0                      1180.0   \n",
       "\n",
       "          Nebenkosten  Wohnfläche  Zimmer  Geschoss       Verfügbarab  \\\n",
       "23016581        240.0        68.0     3.0       2.0        01.05.2020   \n",
       "23016600        300.0       140.0     5.0       2.0        01.05.2020   \n",
       "23014342        240.0        73.0     3.5       NaN        01.03.2020   \n",
       "23017350        150.0         NaN     2.0       1.0        01.05.2020   \n",
       "23016559        130.0        44.0     2.5       3.0        01.06.2020   \n",
       "...               ...         ...     ...       ...               ...   \n",
       "21825642        140.0        35.0     2.5       NaN  nachVereinbarung   \n",
       "20657528        180.0        78.0     1.5       2.0  nachVereinbarung   \n",
       "22104581        280.0         NaN     4.5       3.0            sofort   \n",
       "22420912         90.0        36.0     1.5       7.0  nachVereinbarung   \n",
       "22483750        170.0        57.0     3.0       2.0            sofort   \n",
       "\n",
       "          Balkon(e)  Lift  ...  Baujahr  Aussenparkplatz  Haustiereerlaubt  \\\n",
       "23016581        1.0   1.0  ...     None              NaN               NaN   \n",
       "23016600        1.0   1.0  ...     None              NaN               NaN   \n",
       "23014342        1.0   1.0  ...     1965              1.0               1.0   \n",
       "23017350        1.0   NaN  ...     None              NaN               NaN   \n",
       "23016559        NaN   NaN  ...     1600              NaN               NaN   \n",
       "...             ...   ...  ...      ...              ...               ...   \n",
       "21825642        NaN   NaN  ...     None              NaN               NaN   \n",
       "20657528        NaN   1.0  ...     1975              NaN               1.0   \n",
       "22104581        NaN   NaN  ...     None              1.0               NaN   \n",
       "22420912        1.0   1.0  ...     None              NaN               NaN   \n",
       "22483750        1.0   NaN  ...     None              1.0               NaN   \n",
       "\n",
       "         Kabel-TV Kinderfreundlich Kindergarten Primarschule Sekundarschule  \\\n",
       "23016581      NaN              NaN          NaN          NaN            NaN   \n",
       "23016600      NaN              NaN          NaN          NaN            NaN   \n",
       "23014342      1.0              1.0        700.0        700.0          700.0   \n",
       "23017350      NaN              NaN        350.0          NaN            NaN   \n",
       "23016559      1.0              NaN          NaN          NaN            NaN   \n",
       "...           ...              ...          ...          ...            ...   \n",
       "21825642      NaN              NaN        400.0        610.0            NaN   \n",
       "20657528      1.0              NaN        600.0         80.0           80.0   \n",
       "22104581      1.0              NaN          NaN          NaN            NaN   \n",
       "22420912      NaN              NaN          NaN          NaN            NaN   \n",
       "22483750      1.0              NaN          NaN          NaN            NaN   \n",
       "\n",
       "          Autobahn  Einstellplatz  \n",
       "23016581       NaN            NaN  \n",
       "23016600       NaN            NaN  \n",
       "23014342       NaN            NaN  \n",
       "23017350    1000.0            NaN  \n",
       "23016559       NaN            NaN  \n",
       "...            ...            ...  \n",
       "21825642       NaN            NaN  \n",
       "20657528       NaN            NaN  \n",
       "22104581       NaN            NaN  \n",
       "22420912    2000.0            NaN  \n",
       "22483750    3000.0            NaN  \n",
       "\n",
       "[2344 rows x 27 columns]"
      ]
     },
     "execution_count": 1130,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "ds.groupby('Objektart').count()\n",
    "\n",
    "## Einzelzimmer = single room. That is not what i am looking for.--> drop!\n",
    "## the others are ok.\n",
    "ds['Objektart'] =ds.Objektart[(ds['Objektart'] != 'Einzelzimmer')]\n",
    "ds"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### 3.2 drop nan"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1131,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2303"
      ]
     },
     "execution_count": 1131,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "ds.isna().sum()\n",
    "ds =ds[ds.MietpreisproMonat.isna() ==False] ## only one\n",
    "\n",
    "ds.Objektart.isna().sum() ## i have to drop them, because it is very likely that it is not a flat...\n",
    "ds =ds[ds.Objektart.isna() ==False] \n",
    "ds.shape[0]\n",
    "#ds.head(3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1132,
   "metadata": {},
   "outputs": [],
   "source": [
    "## 3.3 outliers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1133,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>MietpreisproMonat</th>\n",
       "      <th>MietpreisproMonat(exkl.NK)</th>\n",
       "      <th>Nebenkosten</th>\n",
       "      <th>Wohnfläche</th>\n",
       "      <th>Zimmer</th>\n",
       "      <th>Geschoss</th>\n",
       "      <th>Balkon(e)</th>\n",
       "      <th>Lift</th>\n",
       "      <th>ÖV-Haltestelle</th>\n",
       "      <th>Einkaufsmöglichkeit</th>\n",
       "      <th>rating</th>\n",
       "      <th>Aussenparkplatz</th>\n",
       "      <th>Haustiereerlaubt</th>\n",
       "      <th>Kabel-TV</th>\n",
       "      <th>Kinderfreundlich</th>\n",
       "      <th>Kindergarten</th>\n",
       "      <th>Primarschule</th>\n",
       "      <th>Sekundarschule</th>\n",
       "      <th>Autobahn</th>\n",
       "      <th>Einstellplatz</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>count</td>\n",
       "      <td>2303.000000</td>\n",
       "      <td>1709.000000</td>\n",
       "      <td>1709.000000</td>\n",
       "      <td>1709.000000</td>\n",
       "      <td>2275.000000</td>\n",
       "      <td>1774.000000</td>\n",
       "      <td>1181.0</td>\n",
       "      <td>887.0</td>\n",
       "      <td>985.000000</td>\n",
       "      <td>972.000000</td>\n",
       "      <td>672.000000</td>\n",
       "      <td>361.0</td>\n",
       "      <td>442.0</td>\n",
       "      <td>912.0</td>\n",
       "      <td>365.0</td>\n",
       "      <td>589.000000</td>\n",
       "      <td>603.000000</td>\n",
       "      <td>391.000000</td>\n",
       "      <td>414.000000</td>\n",
       "      <td>459.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>mean</td>\n",
       "      <td>2068.829353</td>\n",
       "      <td>1973.875951</td>\n",
       "      <td>230.225278</td>\n",
       "      <td>79.583382</td>\n",
       "      <td>2.953626</td>\n",
       "      <td>2.563698</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>187.305584</td>\n",
       "      <td>382.001029</td>\n",
       "      <td>4.095238</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>456.950764</td>\n",
       "      <td>524.313433</td>\n",
       "      <td>844.918159</td>\n",
       "      <td>1727.553140</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>std</td>\n",
       "      <td>1116.609899</td>\n",
       "      <td>978.147241</td>\n",
       "      <td>97.225661</td>\n",
       "      <td>37.548995</td>\n",
       "      <td>1.237312</td>\n",
       "      <td>2.556337</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>188.595027</td>\n",
       "      <td>493.388297</td>\n",
       "      <td>0.970431</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>410.680225</td>\n",
       "      <td>428.498836</td>\n",
       "      <td>804.348463</td>\n",
       "      <td>1372.695168</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>min</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>70.000000</td>\n",
       "      <td>13.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>-1.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>10.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>25%</td>\n",
       "      <td>1430.000000</td>\n",
       "      <td>1340.000000</td>\n",
       "      <td>173.000000</td>\n",
       "      <td>57.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>200.000000</td>\n",
       "      <td>250.000000</td>\n",
       "      <td>300.000000</td>\n",
       "      <td>1000.000000</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>50%</td>\n",
       "      <td>1790.000000</td>\n",
       "      <td>1690.000000</td>\n",
       "      <td>220.000000</td>\n",
       "      <td>75.000000</td>\n",
       "      <td>3.000000</td>\n",
       "      <td>2.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>130.000000</td>\n",
       "      <td>250.000000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>400.000000</td>\n",
       "      <td>450.000000</td>\n",
       "      <td>550.000000</td>\n",
       "      <td>1308.500000</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>75%</td>\n",
       "      <td>2490.000000</td>\n",
       "      <td>2350.000000</td>\n",
       "      <td>280.000000</td>\n",
       "      <td>100.000000</td>\n",
       "      <td>3.500000</td>\n",
       "      <td>4.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>250.000000</td>\n",
       "      <td>500.000000</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>550.000000</td>\n",
       "      <td>675.000000</td>\n",
       "      <td>1000.000000</td>\n",
       "      <td>2000.000000</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>max</td>\n",
       "      <td>16500.000000</td>\n",
       "      <td>8900.000000</td>\n",
       "      <td>1050.000000</td>\n",
       "      <td>320.000000</td>\n",
       "      <td>12.500000</td>\n",
       "      <td>28.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1940.000000</td>\n",
       "      <td>6740.000000</td>\n",
       "      <td>6.000000</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3840.000000</td>\n",
       "      <td>3070.000000</td>\n",
       "      <td>4900.000000</td>\n",
       "      <td>8700.000000</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       MietpreisproMonat  MietpreisproMonat(exkl.NK)  Nebenkosten  \\\n",
       "count        2303.000000                 1709.000000  1709.000000   \n",
       "mean         2068.829353                 1973.875951   230.225278   \n",
       "std          1116.609899                  978.147241    97.225661   \n",
       "min             1.000000                   70.000000    13.000000   \n",
       "25%          1430.000000                 1340.000000   173.000000   \n",
       "50%          1790.000000                 1690.000000   220.000000   \n",
       "75%          2490.000000                 2350.000000   280.000000   \n",
       "max         16500.000000                 8900.000000  1050.000000   \n",
       "\n",
       "        Wohnfläche       Zimmer     Geschoss  Balkon(e)   Lift  \\\n",
       "count  1709.000000  2275.000000  1774.000000     1181.0  887.0   \n",
       "mean     79.583382     2.953626     2.563698        1.0    1.0   \n",
       "std      37.548995     1.237312     2.556337        0.0    0.0   \n",
       "min       1.000000     1.000000    -1.000000        1.0    1.0   \n",
       "25%      57.000000     2.000000     1.000000        1.0    1.0   \n",
       "50%      75.000000     3.000000     2.000000        1.0    1.0   \n",
       "75%     100.000000     3.500000     4.000000        1.0    1.0   \n",
       "max     320.000000    12.500000    28.000000        1.0    1.0   \n",
       "\n",
       "       ÖV-Haltestelle  Einkaufsmöglichkeit      rating  Aussenparkplatz  \\\n",
       "count      985.000000           972.000000  672.000000            361.0   \n",
       "mean       187.305584           382.001029    4.095238              1.0   \n",
       "std        188.595027           493.388297    0.970431              0.0   \n",
       "min          1.000000             5.000000    2.000000              1.0   \n",
       "25%        100.000000           100.000000    3.000000              1.0   \n",
       "50%        130.000000           250.000000    4.000000              1.0   \n",
       "75%        250.000000           500.000000    5.000000              1.0   \n",
       "max       1940.000000          6740.000000    6.000000              1.0   \n",
       "\n",
       "       Haustiereerlaubt  Kabel-TV  Kinderfreundlich  Kindergarten  \\\n",
       "count             442.0     912.0             365.0    589.000000   \n",
       "mean                1.0       1.0               1.0    456.950764   \n",
       "std                 0.0       0.0               0.0    410.680225   \n",
       "min                 1.0       1.0               1.0     10.000000   \n",
       "25%                 1.0       1.0               1.0    200.000000   \n",
       "50%                 1.0       1.0               1.0    400.000000   \n",
       "75%                 1.0       1.0               1.0    550.000000   \n",
       "max                 1.0       1.0               1.0   3840.000000   \n",
       "\n",
       "       Primarschule  Sekundarschule     Autobahn  Einstellplatz  \n",
       "count    603.000000      391.000000   414.000000          459.0  \n",
       "mean     524.313433      844.918159  1727.553140            1.0  \n",
       "std      428.498836      804.348463  1372.695168            0.0  \n",
       "min       10.000000        1.000000     1.000000            1.0  \n",
       "25%      250.000000      300.000000  1000.000000            1.0  \n",
       "50%      450.000000      550.000000  1308.500000            1.0  \n",
       "75%      675.000000     1000.000000  2000.000000            1.0  \n",
       "max     3070.000000     4900.000000  8700.000000            1.0  "
      ]
     },
     "execution_count": 1133,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "ds.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1134,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Objektart</th>\n",
       "      <th>MietpreisproMonat</th>\n",
       "      <th>MietpreisproMonat(exkl.NK)</th>\n",
       "      <th>Nebenkosten</th>\n",
       "      <th>Wohnfläche</th>\n",
       "      <th>Zimmer</th>\n",
       "      <th>Geschoss</th>\n",
       "      <th>Verfügbarab</th>\n",
       "      <th>Balkon(e)</th>\n",
       "      <th>Lift</th>\n",
       "      <th>...</th>\n",
       "      <th>Baujahr</th>\n",
       "      <th>Aussenparkplatz</th>\n",
       "      <th>Haustiereerlaubt</th>\n",
       "      <th>Kabel-TV</th>\n",
       "      <th>Kinderfreundlich</th>\n",
       "      <th>Kindergarten</th>\n",
       "      <th>Primarschule</th>\n",
       "      <th>Sekundarschule</th>\n",
       "      <th>Autobahn</th>\n",
       "      <th>Einstellplatz</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>22794409</td>\n",
       "      <td>Wohnung</td>\n",
       "      <td>16500.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>260.0</td>\n",
       "      <td>5.5</td>\n",
       "      <td>6.0</td>\n",
       "      <td>nachVereinbarung</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1858</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1 rows × 27 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         Objektart  MietpreisproMonat  MietpreisproMonat(exkl.NK)  \\\n",
       "22794409   Wohnung            16500.0                         NaN   \n",
       "\n",
       "          Nebenkosten  Wohnfläche  Zimmer  Geschoss       Verfügbarab  \\\n",
       "22794409          NaN       260.0     5.5       6.0  nachVereinbarung   \n",
       "\n",
       "          Balkon(e)  Lift  ...  Baujahr  Aussenparkplatz  Haustiereerlaubt  \\\n",
       "22794409        1.0   1.0  ...     1858              NaN               NaN   \n",
       "\n",
       "         Kabel-TV Kinderfreundlich Kindergarten Primarschule Sekundarschule  \\\n",
       "22794409      NaN              NaN          NaN          NaN            NaN   \n",
       "\n",
       "          Autobahn  Einstellplatz  \n",
       "22794409       NaN            NaN  \n",
       "\n",
       "[1 rows x 27 columns]"
      ]
     },
     "execution_count": 1134,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#outliers for price upwards\n",
    "dscopy = ds\n",
    "dscopy['MietpreisproMonat'] =ds.MietpreisproMonat[(ds['MietpreisproMonat'] != 'aufAnfrage')]\n",
    "dscopy['MietpreisproMonat']=dscopy['MietpreisproMonat'].astype('float')\n",
    "dscopy[(dscopy['MietpreisproMonat']>5000) & (dscopy['Zimmer']>7)]\n",
    "\n",
    "dscopy[(dscopy['MietpreisproMonat']>10000)]\n",
    "\n",
    "### there are outliers (on max)regarding the size of the flat(nr of rooms) and regarding the prize --> keep in mind"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1135,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "331.0\n"
     ]
    }
   ],
   "source": [
    "## outliers downwoards for MietpreisproMonat (price)\n",
    "\n",
    "ds['MietpreisproMonat'].quantile(0.05)\n",
    "\n",
    "ds = ds[(ds['MietpreisproMonat']>ds['MietpreisproMonat'].quantile(0.05)) & (ds['Zimmer'].isna())==False] ## drop 8 \n",
    "\n",
    "print(ds.MietpreisproMonat[ds['Zimmer']==1].quantile(0.05))\n",
    "ds[(ds['MietpreisproMonat']<ds.MietpreisproMonat[ds['Zimmer']==1].quantile(0.00))].count() ## drop as well (29), can not be flats\n",
    "ds=ds[(ds['MietpreisproMonat']>ds.MietpreisproMonat[ds['Zimmer']==1].quantile(0.00))]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1136,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Objektart</th>\n",
       "      <th>MietpreisproMonat</th>\n",
       "      <th>MietpreisproMonat(exkl.NK)</th>\n",
       "      <th>Nebenkosten</th>\n",
       "      <th>Wohnfläche</th>\n",
       "      <th>Zimmer</th>\n",
       "      <th>Geschoss</th>\n",
       "      <th>Verfügbarab</th>\n",
       "      <th>Balkon(e)</th>\n",
       "      <th>Lift</th>\n",
       "      <th>...</th>\n",
       "      <th>Baujahr</th>\n",
       "      <th>Aussenparkplatz</th>\n",
       "      <th>Haustiereerlaubt</th>\n",
       "      <th>Kabel-TV</th>\n",
       "      <th>Kinderfreundlich</th>\n",
       "      <th>Kindergarten</th>\n",
       "      <th>Primarschule</th>\n",
       "      <th>Sekundarschule</th>\n",
       "      <th>Autobahn</th>\n",
       "      <th>Einstellplatz</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>23016581</td>\n",
       "      <td>Wohnung</td>\n",
       "      <td>1480.0</td>\n",
       "      <td>1240.0</td>\n",
       "      <td>240.0</td>\n",
       "      <td>68.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>01.05.2020</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>None</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>23016600</td>\n",
       "      <td>Wohnung</td>\n",
       "      <td>3500.0</td>\n",
       "      <td>3200.0</td>\n",
       "      <td>300.0</td>\n",
       "      <td>140.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>01.05.2020</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>None</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>23014342</td>\n",
       "      <td>Wohnung</td>\n",
       "      <td>1710.0</td>\n",
       "      <td>1470.0</td>\n",
       "      <td>240.0</td>\n",
       "      <td>73.0</td>\n",
       "      <td>3.5</td>\n",
       "      <td>NaN</td>\n",
       "      <td>01.03.2020</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1965</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>700.0</td>\n",
       "      <td>700.0</td>\n",
       "      <td>700.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>23017350</td>\n",
       "      <td>Wohnung</td>\n",
       "      <td>1180.0</td>\n",
       "      <td>1030.0</td>\n",
       "      <td>150.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>01.05.2020</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>None</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>350.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1000.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>23016559</td>\n",
       "      <td>Wohnung</td>\n",
       "      <td>1360.0</td>\n",
       "      <td>1230.0</td>\n",
       "      <td>130.0</td>\n",
       "      <td>44.0</td>\n",
       "      <td>2.5</td>\n",
       "      <td>3.0</td>\n",
       "      <td>01.06.2020</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>1600</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>21825642</td>\n",
       "      <td>Wohnung</td>\n",
       "      <td>1430.0</td>\n",
       "      <td>1290.0</td>\n",
       "      <td>140.0</td>\n",
       "      <td>35.0</td>\n",
       "      <td>2.5</td>\n",
       "      <td>NaN</td>\n",
       "      <td>nachVereinbarung</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>None</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>400.0</td>\n",
       "      <td>610.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>20657528</td>\n",
       "      <td>Wohnung</td>\n",
       "      <td>1840.0</td>\n",
       "      <td>1660.0</td>\n",
       "      <td>180.0</td>\n",
       "      <td>78.0</td>\n",
       "      <td>1.5</td>\n",
       "      <td>2.0</td>\n",
       "      <td>nachVereinbarung</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1975</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>600.0</td>\n",
       "      <td>80.0</td>\n",
       "      <td>80.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>22104581</td>\n",
       "      <td>Wohnung</td>\n",
       "      <td>1890.0</td>\n",
       "      <td>1610.0</td>\n",
       "      <td>280.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4.5</td>\n",
       "      <td>3.0</td>\n",
       "      <td>sofort</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>None</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>22420912</td>\n",
       "      <td>Wohnung</td>\n",
       "      <td>1540.0</td>\n",
       "      <td>1450.0</td>\n",
       "      <td>90.0</td>\n",
       "      <td>36.0</td>\n",
       "      <td>1.5</td>\n",
       "      <td>7.0</td>\n",
       "      <td>nachVereinbarung</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>None</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2000.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>22483750</td>\n",
       "      <td>Wohnung</td>\n",
       "      <td>1350.0</td>\n",
       "      <td>1180.0</td>\n",
       "      <td>170.0</td>\n",
       "      <td>57.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>sofort</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>None</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3000.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2281 rows × 27 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         Objektart  MietpreisproMonat  MietpreisproMonat(exkl.NK)  \\\n",
       "23016581   Wohnung             1480.0                      1240.0   \n",
       "23016600   Wohnung             3500.0                      3200.0   \n",
       "23014342   Wohnung             1710.0                      1470.0   \n",
       "23017350   Wohnung             1180.0                      1030.0   \n",
       "23016559   Wohnung             1360.0                      1230.0   \n",
       "...            ...                ...                         ...   \n",
       "21825642   Wohnung             1430.0                      1290.0   \n",
       "20657528   Wohnung             1840.0                      1660.0   \n",
       "22104581   Wohnung             1890.0                      1610.0   \n",
       "22420912   Wohnung             1540.0                      1450.0   \n",
       "22483750   Wohnung             1350.0                      1180.0   \n",
       "\n",
       "          Nebenkosten  Wohnfläche  Zimmer  Geschoss       Verfügbarab  \\\n",
       "23016581        240.0        68.0     3.0       2.0        01.05.2020   \n",
       "23016600        300.0       140.0     5.0       2.0        01.05.2020   \n",
       "23014342        240.0        73.0     3.5       NaN        01.03.2020   \n",
       "23017350        150.0         NaN     2.0       1.0        01.05.2020   \n",
       "23016559        130.0        44.0     2.5       3.0        01.06.2020   \n",
       "...               ...         ...     ...       ...               ...   \n",
       "21825642        140.0        35.0     2.5       NaN  nachVereinbarung   \n",
       "20657528        180.0        78.0     1.5       2.0  nachVereinbarung   \n",
       "22104581        280.0         NaN     4.5       3.0            sofort   \n",
       "22420912         90.0        36.0     1.5       7.0  nachVereinbarung   \n",
       "22483750        170.0        57.0     3.0       2.0            sofort   \n",
       "\n",
       "          Balkon(e)  Lift  ...  Baujahr  Aussenparkplatz  Haustiereerlaubt  \\\n",
       "23016581        1.0   1.0  ...     None              NaN               NaN   \n",
       "23016600        1.0   1.0  ...     None              NaN               NaN   \n",
       "23014342        1.0   1.0  ...     1965              1.0               1.0   \n",
       "23017350        1.0   NaN  ...     None              NaN               NaN   \n",
       "23016559        NaN   NaN  ...     1600              NaN               NaN   \n",
       "...             ...   ...  ...      ...              ...               ...   \n",
       "21825642        NaN   NaN  ...     None              NaN               NaN   \n",
       "20657528        NaN   1.0  ...     1975              NaN               1.0   \n",
       "22104581        NaN   NaN  ...     None              1.0               NaN   \n",
       "22420912        1.0   1.0  ...     None              NaN               NaN   \n",
       "22483750        1.0   NaN  ...     None              1.0               NaN   \n",
       "\n",
       "         Kabel-TV Kinderfreundlich Kindergarten Primarschule Sekundarschule  \\\n",
       "23016581      NaN              NaN          NaN          NaN            NaN   \n",
       "23016600      NaN              NaN          NaN          NaN            NaN   \n",
       "23014342      1.0              1.0        700.0        700.0          700.0   \n",
       "23017350      NaN              NaN        350.0          NaN            NaN   \n",
       "23016559      1.0              NaN          NaN          NaN            NaN   \n",
       "...           ...              ...          ...          ...            ...   \n",
       "21825642      NaN              NaN        400.0        610.0            NaN   \n",
       "20657528      1.0              NaN        600.0         80.0           80.0   \n",
       "22104581      1.0              NaN          NaN          NaN            NaN   \n",
       "22420912      NaN              NaN          NaN          NaN            NaN   \n",
       "22483750      1.0              NaN          NaN          NaN            NaN   \n",
       "\n",
       "          Autobahn  Einstellplatz  \n",
       "23016581       NaN            NaN  \n",
       "23016600       NaN            NaN  \n",
       "23014342       NaN            NaN  \n",
       "23017350    1000.0            NaN  \n",
       "23016559       NaN            NaN  \n",
       "...            ...            ...  \n",
       "21825642       NaN            NaN  \n",
       "20657528       NaN            NaN  \n",
       "22104581       NaN            NaN  \n",
       "22420912    2000.0            NaN  \n",
       "22483750    3000.0            NaN  \n",
       "\n",
       "[2281 rows x 27 columns]"
      ]
     },
     "execution_count": 1136,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 4. Change column names and save to csv"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1137,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Objektart', 'MietpreisproMonat', 'MietpreisproMonat(exkl.NK)',\n",
       "       'Nebenkosten', 'Wohnfläche', 'Zimmer', 'Geschoss', 'Verfügbarab',\n",
       "       'Balkon(e)', 'Lift', 'ÖV-Haltestelle', 'Einkaufsmöglichkeit', 'rating',\n",
       "       'adress', 'publication_date', 'city', 'DateofScrapping', 'Baujahr',\n",
       "       'Aussenparkplatz', 'Haustiereerlaubt', 'Kabel-TV', 'Kinderfreundlich',\n",
       "       'Kindergarten', 'Primarschule', 'Sekundarschule', 'Autobahn',\n",
       "       'Einstellplatz'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 1137,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ds.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 1138,
   "metadata": {},
   "outputs": [],
   "source": [
    "ds=ds.rename(columns={'Objektart': 'object_type', 'MietpreisproMonat':'price','MietpreisproMonat(exkl.NK)':'price_wo_extras',\n",
    "       'Nebenkosten':'extras', 'Wohnfläche':'size', 'Zimmer':'rooms', 'Geschoss':'floor', 'Verfügbarab':'moovIn',\n",
    "       'Balkon(e)':'balcony', 'Lift':'lift', 'ÖV-Haltestelle': 'public_transport', 'Einkaufsmöglichkeit':'shopping', 'Baujahr': 'age',\n",
    "       'Aussenparkplatz':'parking_out', 'Haustiereerlaubt':'pets_allowed', 'Kabel-TV':'tv', 'Kinderfreundlich':'kids_ok',\n",
    "       'Kindergarten':'KG', 'Primarschule':'PS', 'Sekundarschule': 'SS', 'Autobahn': 'highway',\n",
    "       'Einstellplatz': 'parking_in'}, errors=\"raise\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1139,
   "metadata": {},
   "outputs": [],
   "source": [
    "ds.to_csv('./Data/c_flats_clean.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1140,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>object_type</th>\n",
       "      <th>price</th>\n",
       "      <th>price_wo_extras</th>\n",
       "      <th>extras</th>\n",
       "      <th>size</th>\n",
       "      <th>rooms</th>\n",
       "      <th>floor</th>\n",
       "      <th>moovIn</th>\n",
       "      <th>balcony</th>\n",
       "      <th>lift</th>\n",
       "      <th>...</th>\n",
       "      <th>age</th>\n",
       "      <th>parking_out</th>\n",
       "      <th>pets_allowed</th>\n",
       "      <th>tv</th>\n",
       "      <th>kids_ok</th>\n",
       "      <th>KG</th>\n",
       "      <th>PS</th>\n",
       "      <th>SS</th>\n",
       "      <th>highway</th>\n",
       "      <th>parking_in</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>23016581</td>\n",
       "      <td>Wohnung</td>\n",
       "      <td>1480.0</td>\n",
       "      <td>1240.0</td>\n",
       "      <td>240.0</td>\n",
       "      <td>68.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>01.05.2020</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>None</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>23016600</td>\n",
       "      <td>Wohnung</td>\n",
       "      <td>3500.0</td>\n",
       "      <td>3200.0</td>\n",
       "      <td>300.0</td>\n",
       "      <td>140.0</td>\n",
       "      <td>5.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>01.05.2020</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>None</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>23014342</td>\n",
       "      <td>Wohnung</td>\n",
       "      <td>1710.0</td>\n",
       "      <td>1470.0</td>\n",
       "      <td>240.0</td>\n",
       "      <td>73.0</td>\n",
       "      <td>3.5</td>\n",
       "      <td>NaN</td>\n",
       "      <td>01.03.2020</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1965</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>700.0</td>\n",
       "      <td>700.0</td>\n",
       "      <td>700.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>23017350</td>\n",
       "      <td>Wohnung</td>\n",
       "      <td>1180.0</td>\n",
       "      <td>1030.0</td>\n",
       "      <td>150.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>01.05.2020</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>None</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>350.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1000.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>23016559</td>\n",
       "      <td>Wohnung</td>\n",
       "      <td>1360.0</td>\n",
       "      <td>1230.0</td>\n",
       "      <td>130.0</td>\n",
       "      <td>44.0</td>\n",
       "      <td>2.5</td>\n",
       "      <td>3.0</td>\n",
       "      <td>01.06.2020</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>1600</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>21825642</td>\n",
       "      <td>Wohnung</td>\n",
       "      <td>1430.0</td>\n",
       "      <td>1290.0</td>\n",
       "      <td>140.0</td>\n",
       "      <td>35.0</td>\n",
       "      <td>2.5</td>\n",
       "      <td>NaN</td>\n",
       "      <td>nachVereinbarung</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>None</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>400.0</td>\n",
       "      <td>610.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>20657528</td>\n",
       "      <td>Wohnung</td>\n",
       "      <td>1840.0</td>\n",
       "      <td>1660.0</td>\n",
       "      <td>180.0</td>\n",
       "      <td>78.0</td>\n",
       "      <td>1.5</td>\n",
       "      <td>2.0</td>\n",
       "      <td>nachVereinbarung</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>1975</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>600.0</td>\n",
       "      <td>80.0</td>\n",
       "      <td>80.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>22104581</td>\n",
       "      <td>Wohnung</td>\n",
       "      <td>1890.0</td>\n",
       "      <td>1610.0</td>\n",
       "      <td>280.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4.5</td>\n",
       "      <td>3.0</td>\n",
       "      <td>sofort</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>None</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>22420912</td>\n",
       "      <td>Wohnung</td>\n",
       "      <td>1540.0</td>\n",
       "      <td>1450.0</td>\n",
       "      <td>90.0</td>\n",
       "      <td>36.0</td>\n",
       "      <td>1.5</td>\n",
       "      <td>7.0</td>\n",
       "      <td>nachVereinbarung</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>...</td>\n",
       "      <td>None</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2000.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>22483750</td>\n",
       "      <td>Wohnung</td>\n",
       "      <td>1350.0</td>\n",
       "      <td>1180.0</td>\n",
       "      <td>170.0</td>\n",
       "      <td>57.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>sofort</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>None</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3000.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2281 rows × 27 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         object_type   price  price_wo_extras  extras   size  rooms  floor  \\\n",
       "23016581     Wohnung  1480.0           1240.0   240.0   68.0    3.0    2.0   \n",
       "23016600     Wohnung  3500.0           3200.0   300.0  140.0    5.0    2.0   \n",
       "23014342     Wohnung  1710.0           1470.0   240.0   73.0    3.5    NaN   \n",
       "23017350     Wohnung  1180.0           1030.0   150.0    NaN    2.0    1.0   \n",
       "23016559     Wohnung  1360.0           1230.0   130.0   44.0    2.5    3.0   \n",
       "...              ...     ...              ...     ...    ...    ...    ...   \n",
       "21825642     Wohnung  1430.0           1290.0   140.0   35.0    2.5    NaN   \n",
       "20657528     Wohnung  1840.0           1660.0   180.0   78.0    1.5    2.0   \n",
       "22104581     Wohnung  1890.0           1610.0   280.0    NaN    4.5    3.0   \n",
       "22420912     Wohnung  1540.0           1450.0    90.0   36.0    1.5    7.0   \n",
       "22483750     Wohnung  1350.0           1180.0   170.0   57.0    3.0    2.0   \n",
       "\n",
       "                    moovIn  balcony  lift  ...   age  parking_out  \\\n",
       "23016581        01.05.2020      1.0   1.0  ...  None          NaN   \n",
       "23016600        01.05.2020      1.0   1.0  ...  None          NaN   \n",
       "23014342        01.03.2020      1.0   1.0  ...  1965          1.0   \n",
       "23017350        01.05.2020      1.0   NaN  ...  None          NaN   \n",
       "23016559        01.06.2020      NaN   NaN  ...  1600          NaN   \n",
       "...                    ...      ...   ...  ...   ...          ...   \n",
       "21825642  nachVereinbarung      NaN   NaN  ...  None          NaN   \n",
       "20657528  nachVereinbarung      NaN   1.0  ...  1975          NaN   \n",
       "22104581            sofort      NaN   NaN  ...  None          1.0   \n",
       "22420912  nachVereinbarung      1.0   1.0  ...  None          NaN   \n",
       "22483750            sofort      1.0   NaN  ...  None          1.0   \n",
       "\n",
       "          pets_allowed   tv kids_ok     KG     PS     SS  highway  parking_in  \n",
       "23016581           NaN  NaN     NaN    NaN    NaN    NaN      NaN         NaN  \n",
       "23016600           NaN  NaN     NaN    NaN    NaN    NaN      NaN         NaN  \n",
       "23014342           1.0  1.0     1.0  700.0  700.0  700.0      NaN         NaN  \n",
       "23017350           NaN  NaN     NaN  350.0    NaN    NaN   1000.0         NaN  \n",
       "23016559           NaN  1.0     NaN    NaN    NaN    NaN      NaN         NaN  \n",
       "...                ...  ...     ...    ...    ...    ...      ...         ...  \n",
       "21825642           NaN  NaN     NaN  400.0  610.0    NaN      NaN         NaN  \n",
       "20657528           1.0  1.0     NaN  600.0   80.0   80.0      NaN         NaN  \n",
       "22104581           NaN  1.0     NaN    NaN    NaN    NaN      NaN         NaN  \n",
       "22420912           NaN  NaN     NaN    NaN    NaN    NaN   2000.0         NaN  \n",
       "22483750           NaN  1.0     NaN    NaN    NaN    NaN   3000.0         NaN  \n",
       "\n",
       "[2281 rows x 27 columns]"
      ]
     },
     "execution_count": 1140,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ds"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
